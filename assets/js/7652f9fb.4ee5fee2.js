"use strict";(self.webpackChunkapuntes=self.webpackChunkapuntes||[]).push([[690],{3905:(e,a,r)=>{r.d(a,{Zo:()=>p,kt:()=>m});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function i(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),u=function(e){var a=t.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},p=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return r?t.createElement(k,l(l({ref:a},p),{},{components:r})):t.createElement(k,l({ref:a},p))}));function m(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9845:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var t=r(7462),n=(r(7294),r(3905));const o={sidebar_position:4},l="Operadores",i={unversionedId:"primeros-pasos/operadores",id:"primeros-pasos/operadores",title:"Operadores",description:"Un operador es un caracter o grupo de caracteres que act\xfaa sobre una, dos o m\xe1s variables y/o constantes, para realizar una determinada operaci\xf3n con un determinado resultado.",source:"@site/docs/primeros-pasos/operadores.md",sourceDirName:"primeros-pasos",slug:"/primeros-pasos/operadores",permalink:"/primeros-pasos/operadores",draft:!1,editUrl:"https://github.com/algo1camejo/apuntes/docs/primeros-pasos/operadores.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Tipos de Datos",permalink:"/primeros-pasos/tipos-de-datos"},next:{title:"Estructuras de Control",permalink:"/primeros-pasos/estructuras-de-control"}},s={},u=[{value:"Aritm\xe9ticos",id:"aritm\xe9ticos",level:2},{value:"Relacionales",id:"relacionales",level:2},{value:"L\xf3gicos",id:"l\xf3gicos",level:2},{value:"Operadores en C",id:"operadores-en-c",level:2},{value:"Aritm\xe9ticos",id:"aritm\xe9ticos-1",level:3},{value:"Relacionales",id:"relacionales-1",level:3},{value:"L\xf3gicos",id:"l\xf3gicos-1",level:3}],p={toc:u};function c(e){let{components:a,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"operadores"},"Operadores"),(0,n.kt)("p",null,"Un operador es un caracter o grupo de caracteres que act\xfaa sobre una, dos o m\xe1s variables y/o constantes, para realizar una determinada operaci\xf3n con un determinado resultado."),(0,n.kt)("h2",{id:"aritm\xe9ticos"},"Aritm\xe9ticos"),(0,n.kt)("p",null,"Permiten realizar operaciones aritm\xe9ticas. Cada lenguaje debe proporciona ciertos operadores b\xe1scicos, as\xed como:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Multiplicaci\xf3n."),(0,n.kt)("li",{parentName:"ul"},"Divisi\xf3n."),(0,n.kt)("li",{parentName:"ul"},"Suma."),(0,n.kt)("li",{parentName:"ul"},"Resta."),(0,n.kt)("li",{parentName:"ul"},"M\xf3dulo.")),(0,n.kt)("p",null,"Hay lenguajes que tambi\xe9n brindan el operador de potencia."),(0,n.kt)("p",null,"Por ejemplo, Python"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"numero = 2**3\n")),(0,n.kt)("p",null,"Al ejecutarse esa l\xednea la variable numero almacenar\xe1 8."),(0,n.kt)("h2",{id:"relacionales"},"Relacionales"),(0,n.kt)("p",null,"Se utilizan para comparar dos valores. Devuelven un valor l\xf3gico, verdadero o falso."),(0,n.kt)("p",null,"Se tienen los operadores:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Menor que"),(0,n.kt)("li",{parentName:"ul"},"Menor o igual que"),(0,n.kt)("li",{parentName:"ul"},"Mayor que"),(0,n.kt)("li",{parentName:"ul"},"Mayor o igual que"),(0,n.kt)("li",{parentName:"ul"},"Igual"),(0,n.kt)("li",{parentName:"ul"},"No igual")),(0,n.kt)("h2",{id:"l\xf3gicos"},"L\xf3gicos"),(0,n.kt)("p",null,"A trav\xe9s de valores booleanos (verdadero o falso), devuelve otro valor booleano."),(0,n.kt)("p",null,"Operadores:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"o (or) : Devuelve true si al menos uno de los valores es verdadero."),(0,n.kt)("li",{parentName:"ul"},"y (and) : Devuelve true si todos los valores son verdaderos."),(0,n.kt)("li",{parentName:"ul"},"negacion (negation) : Niega el valor l\xf3gico.")),(0,n.kt)("h2",{id:"operadores-en-c"},"Operadores en C"),(0,n.kt)("h3",{id:"aritm\xe9ticos-1"},"Aritm\xe9ticos"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"*")," : Multiplicaci\xf3n"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"/")," : Divisi\xf3n"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"+")," : Suma"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"-")," : Resta"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"%")," : M\xf3dulo")),(0,n.kt)("h3",{id:"relacionales-1"},"Relacionales"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<")," : Menor que"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<=")," : Menor o igual que"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},">")," : Mayor que"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},">=")," : Mayor o igual que"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"==")," : Igual "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"!=")," : Diferente")),(0,n.kt)("p",null,"Ejemplos,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"5 < 5 : false\n5 == 5 : true\n6 > 5 : true\n")),(0,n.kt)("h3",{id:"l\xf3gicos-1"},"L\xf3gicos"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"||")," : or"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"&&")," : and")),(0,n.kt)("p",null,"Ejemplos,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"// Con que alguna de las dos expresiones sea verdadera es suficiente para que || lo sea tambi\xe9n.\n((5 > 4):true || (2 == 3):false) : true\n\n// Ambas expresiones deben ser verdaderas para que && tambi\xe9n lo sea.\n((5 == 6):false && (8==8):true) : false\n((2 > 1):true && (5 < 10):true) : true\n")))}c.isMDXComponent=!0}}]);